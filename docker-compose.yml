version: "3.9"

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    # Avoid container_name to keep deployments flexible and prevent name collisions
    restart: unless-stopped
    environment:
      UPLOAD_FOLDER: /app/uploads
      SORTED_FOLDER: /app/sorted
    volumes:
      - backend_uploads:/app/uploads
      - backend_sorted:/app/sorted
    ports:
      - 8000:8000
    # Optional: adjust the health endpoint to match your backend
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    # Avoid container_name to keep deployments flexible and prevent name collisions
    restart: unless-stopped
    environment:
      DEBUG: "false"
      HOST: 0.0.0.0
      PORT: "5000"
      UPLOAD_FOLDER: /tmp/uploads
      BACKEND_URL: http://backend:8000/sort
    ports:
      - 5000:5000
    depends_on:
      - backend
    # If the frontend writes to UPLOAD_FOLDER, mount a volume so data isn't lost on restart
    volumes:
      - frontend_uploads:/tmp/uploads
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  backend_uploads:
  backend_sorted:
  frontend_uploads: